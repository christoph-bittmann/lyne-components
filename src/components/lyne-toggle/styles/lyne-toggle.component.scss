// Default component properties, defined for :host. Properties which can not
// travel the shadow boundary are defined through this mixin, available for shared
// and default mode
@include host-component-properties;

:host {

  display: inline-block;

  --toggle-width: 48;
  --toggle-height: 28;
  --toggle-handler-size: 24;
  --toggle-background-color-checked: var(--color-red-default);

  --background-color: var(--color-smoke-default);
  --background-color-disabled: var(--color-cloud-default);
  --toggle-padding: 2;

  --text-color: var(--color-charcoal-default);
  --text-color-checked: var(--color-anthracite-default);

  --transition-duration: 100ms;
  --transition-easing-function: ease-in-out;

}

input {
  position: absolute;
  inset: 0;
  margin: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  z-index: 1;
}

.toggle {
  display: flex;
  flex: 1 1 auto;
  align-items: center;
  gap: pxToRem(var(--spacing-fixed-3x));
}

.toggle--label-right {
  flex-direction: row-reverse;
}

label {
  @include text-s--regular();
  color: var(--text-color);
}

.toggle--disabled label {
  color: var(--color-graphite-default);

  @include ifForcedColors {
    color: GrayText;
  }

}

.toggle__checkbox-wrapper {
  position: relative;
  width: pxToRem(var(--toggle-width));
  height: pxToRem(var(--toggle-height));
}

.toggle__checkbox {
  width: pxToRem(var(--toggle-width));
  height: pxToRem(var(--toggle-height));
}

.toggle__checkbox-styled {
  position: absolute;
  inset: 0;
  z-index: 0;
  padding: pxToRem(var(--toggle-padding));
  background: var(--background-color);
  border-radius: pxToRem(var(--toggle-height));
  transition-duration: var(--transition-duration);
  transition-timing-function: var(--transition-easing-function);
  transition-property: background-color;
  transform: translateX(pxToRem(0));
  will-change: background-color;

  @include ifForcedColors {
    border: pxToRem(1) solid CanvasText;
  }

}

.toggle--disabled .toggle__checkbox-styled {
  background-color: var(--background-color-disabled);

  @include ifForcedColors {
    border-color: GrayText;
  }

}

.toggle__checkbox-styled:before {
  @include box-shadow-5-hard();
  position: absolute;
  inset: pxToRem(var(--toggle-padding));
  content: '';
  width: pxToRem(var(--toggle-handler-size));
  height: pxToRem(var(--toggle-handler-size));
  border-radius: 100%;
  background: var(--color-white-default);
  transition-duration: inherit;
  transition-timing-function: inherit;
  transition-property: transform;
  will-change: transform;

  @include ifForcedColors {
    width: pxToRem(22);
    height: pxToRem(22);
    border: pxToRem(1) solid CanvasText;
  }

}

.toggle:not(.toggle--disabled) .toggle__checkbox:checked + .toggle__checkbox-styled {
  background: var(--toggle-background-color-checked);

  @include ifForcedColors {
    background: CanvasText;
  }

}

.toggle--disabled .toggle__checkbox + .toggle__checkbox-styled:before {
  @include ifForcedColors {
    border-color: GrayText;
  }
}

.toggle--disabled .toggle__checkbox:checked + .toggle__checkbox-styled {
   @include ifForcedColors {
    background: GrayText;
  }
}

//.toggle:dir(ltr) .toggle__checkbox:checked + .toggle__checkbox-styled:before {
.toggle__checkbox:checked + .toggle__checkbox-styled:before {
  transform: translateX(pxToRem(20));

  @include ifForcedColors {
    border: pxToRem(1) solid Canvas;
  }

}

/*
.toggle:dir(rtl) .toggle__checkbox:checked + .toggle__checkbox-styled:before {
  transform: translateX(pxToRem(-20));
} */

// Tick Icon
// ----------------------------------------------
.toggle__checkbox-tick {
  position: absolute;
  inset-inline-start: pxToRem(var(--toggle-padding));
  inset-block-start: pxToRem(var(--toggle-padding));
  z-index: 1;
  width: pxToRem(var(--toggle-handler-size));
  height: pxToRem(var(--toggle-handler-size));
  overflow: hidden;
  fill: var(--toggle-background-color-checked);
  opacity: 0.000001;
  transition-duration: var(--transition-duration);
  transition-timing-function: var(--transition-easing-function);
  transition-property: transform, opacity;
  transform: translateX(pxToRem(0)) scale3d(0.5,0.5,0.5);
  will-change: transform;
  pointer-events: none;

  @include ifForcedColors {
    fill: CanvasText;
  }

}

.toggle__checkbox:checked ~ .toggle__checkbox-tick {
  opacity: 0.999999;
}

//.toggle:dir(ltr) .toggle__checkbox:checked ~ .toggle__checkbox-tick {
.toggle__checkbox:checked ~ .toggle__checkbox-tick {
  transform: translateX(pxToRem(20)) scale3d(1,1,1);
}

/*
.toggle:dir(rtl) .toggle__checkbox:checked ~ .toggle__checkbox-tick {
  transform: translateX(pxToRem(-20)) scale3d(1,1,1);
} */

.toggle--disabled .toggle__checkbox-tick {
  fill: var(--background-color-disabled);

  @include ifForcedColors {
    fill: GrayText;
  }

}


// TODO right to left style
// TODO high contrast style
